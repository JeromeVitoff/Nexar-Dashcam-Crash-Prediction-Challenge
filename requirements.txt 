# ===================================
# NEXAR COLLISION PREDICTION
# Requirements for Deep Learning Research Project
# Python 3.11+
# ===================================

# ===================================
# DEEP LEARNING FRAMEWORKS
# ===================================
torch>=2.0.0
torchvision>=0.15.0
torchaudio>=2.0.0
pytorch-lightning>=2.0.0

# Alternative: TensorFlow (uncomment if needed)
# tensorflow>=2.13.0
# keras>=2.13.0

# ===================================
# VIDEO PROCESSING
# ===================================
opencv-python>=4.8.0
opencv-contrib-python>=4.8.0
av>=10.0.0  # PyAV for efficient video reading
decord>=0.6.0  # Fast video loader
imageio>=2.31.0
imageio-ffmpeg>=0.4.9

# ===================================
# COMPUTER VISION & PRETRAINED MODELS
# ===================================
timm>=0.9.0  # PyTorch Image Models (EfficientNet, ResNet, etc.)
pytorchvideo>=0.1.5  # Facebook's video understanding library
transformers>=4.30.0  # Hugging Face (for Vision Transformers)
einops>=0.6.1  # Tensor operations for transformers

# ===================================
# DATA MANIPULATION
# ===================================
numpy>=1.24.0
pandas>=2.0.0
scipy>=1.11.0
scikit-learn>=1.3.0

# ===================================
# DATA AUGMENTATION
# ===================================
albumentations>=1.3.1
imgaug>=0.4.0
kornia>=0.7.0  # Differentiable augmentations for PyTorch

# ===================================
# VISUALIZATION
# ===================================
matplotlib>=3.7.0
seaborn>=0.12.0
plotly>=5.14.0
opencv-python>=4.8.0  # For video visualization

# ===================================
# EXPERIMENT TRACKING & LOGGING
# ===================================
wandb>=0.15.0  # Weights & Biases
tensorboard>=2.13.0
tensorboardX>=2.6
mlflow>=2.5.0  # Alternative experiment tracking

# ===================================
# HYPERPARAMETER OPTIMIZATION
# ===================================
optuna>=3.2.0
ray[tune]>=2.5.0  # Ray Tune for distributed HPO

# ===================================
# METRICS & EVALUATION
# ===================================
torchmetrics>=1.0.0
scikit-learn>=1.3.0

# ===================================
# CONFIGURATION MANAGEMENT
# ===================================
pyyaml>=6.0
omegaconf>=2.3.0  # Hierarchical configs
hydra-core>=1.3.0  # Config composition

# ===================================
# NOTEBOOK & INTERACTIVE
# ===================================
jupyter>=1.0.0
jupyterlab>=4.0.0
ipywidgets>=8.0.0
ipython>=8.14.0
notebook>=7.0.0

# ===================================
# PROGRESS BARS & CLI
# ===================================
tqdm>=4.65.0
rich>=13.4.0  # Beautiful terminal output
click>=8.1.0  # Command-line interface

# ===================================
# FILE I/O & COMPRESSION
# ===================================
h5py>=3.9.0  # HDF5 for large arrays
pillow>=10.0.0
pyarrow>=12.0.0  # Fast I/O for pandas

# ===================================
# UTILITIES
# ===================================
python-dotenv>=1.0.0  # Environment variables
colorama>=0.4.6  # Colored terminal output
psutil>=5.9.0  # System monitoring

# ===================================
# KAGGLE INTEGRATION
# ===================================
kaggle>=1.5.16  # Kaggle API

# ===================================
# MODEL INTERPRETABILITY
# ===================================
grad-cam>=1.4.8  # GradCAM implementation
captum>=0.6.0  # PyTorch model interpretability

# ===================================
# TESTING & CODE QUALITY
# ===================================
pytest>=7.4.0
pytest-cov>=4.1.0
black>=23.7.0  # Code formatter
flake8>=6.0.0  # Linter
isort>=5.12.0  # Import sorting

# ===================================
# PERFORMANCE & OPTIMIZATION
# ===================================
nvidia-ml-py3>=7.352.0  # NVIDIA GPU monitoring
py-cpuinfo>=9.0.0

# ===================================
# ADDITIONAL UTILITIES
# ===================================
requests>=2.31.0
urllib3>=2.0.0